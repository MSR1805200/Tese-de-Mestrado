k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
tao1 = pi * dnorm(y, mean = mu1, sd = sig1) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
tao2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
Q[k] = sum( (tao1 * log(pi)) + (tao1 * log(dnorm(y, mean = mu1, sd = sig1))) +
(tao2 * log(1-pi)) + (tao2 * log(dnorm(y, mean = mu2, sd = sig2)))
)
}
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
tao1 = pi * dnorm(y, mean = mu1, sd = sig1) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
tao2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
Q[k] = sum( (tao1 * log(pi)) + (tao1 * log(dnorm(y, mean = mu1, sd = sig1))) +
(tao2 * log(1-pi)) + (tao2 * log(dnorm(y, mean = mu2, sd = sig2)))
)
}
Q
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
tao1 = pi * dnorm(y, mean = mu1, sd = sig1) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
tao2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
Q[k] = somar_dados_finitos( (tao1 * log(pi)) + (tao1 * log(dnorm(y, mean = mu1, sd = sig1))) +
(tao2 * log(1-pi)) + (tao2 * log(dnorm(y, mean = mu2, sd = sig2)))
)
}
pi
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
Q = c(0,1)
k = 2
pi1 = 0.9
pi2 = 0.1
sigma1 = sig1
sigma2 = sig2
while (abs(Q[k]-Q[k-1])>=1e-6) {
# E step
comp1 <- pi1 * dnorm(x, mu1, sigma1)
comp2 <- pi2 * dnorm(x, mu2, sigma2)
comp.sum <- comp1 + comp2
p1 <- comp1/comp.sum
p2 <- comp2/comp.sum
# M step
pi1 <- somar_dados_finitos(p1) / length(x)
pi2 <- somar_dados_finitos(p2) / length(x)
mu1 <- somar_dados_finitos(p1 * x) / somar_dados_finitos(p1)
mu2 <- somar_dados_finitos(p2 * x) / somar_dados_finitos(p2)
sigma1 <- sqrt(somar_dados_finitos(p1 * (x-mu1)^2) / somar_dados_finitos(p1))
sigma2 <- sqrt(somar_dados_finitos(p2 * (x-mu2)^2) / somar_dados_finitos(p2))
p1 <- pi1
p2 <- pi2
k <- k + 1
Q[k] <- sum(log(comp.sum))
}
x = y
while (abs(Q[k]-Q[k-1])>=1e-6) {
# E step
comp1 <- pi1 * dnorm(x, mu1, sigma1)
comp2 <- pi2 * dnorm(x, mu2, sigma2)
comp.sum <- comp1 + comp2
p1 <- comp1/comp.sum
p2 <- comp2/comp.sum
# M step
pi1 <- somar_dados_finitos(p1) / length(x)
pi2 <- somar_dados_finitos(p2) / length(x)
mu1 <- somar_dados_finitos(p1 * x) / somar_dados_finitos(p1)
mu2 <- somar_dados_finitos(p2 * x) / somar_dados_finitos(p2)
sigma1 <- sqrt(somar_dados_finitos(p1 * (x-mu1)^2) / somar_dados_finitos(p1))
sigma2 <- sqrt(somar_dados_finitos(p2 * (x-mu2)^2) / somar_dados_finitos(p2))
p1 <- pi1
p2 <- pi2
k <- k + 1
Q[k] <- sum(log(comp.sum))
}
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
tao1 = pi * dnorm(y, mean = mu1, sd = sig1) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
tao2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
Q[k] = somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
}
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
tao1 = pi * dnorm(y, mean = mu1, sd = sig1) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
tao2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
tao1 = pi
Q[k] = somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
}
set.seed(42)
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
tao1 = pi * dnorm(y, mean = mu1, sd = sig1) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
tao2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
tao1 = pi
Q[k] = somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
}
set.seed(42)
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
tao1 = pi * dnorm(y, mean = mu1, sd = sig1) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
tao2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2) / somar_dados_finitos(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
tao1 = pi
Q[k] = sum(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
}
set.seed(42)
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
tao1 = pi * dnorm(y, mean = mu1, sd = sig1) / sum(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
tao2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2) / sum(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
tao1 = pi
Q[k] = sum(pi * dnorm(y, mean = mu1, sd = sig1) +
((1-pi) * dnorm(y, mean = mu2, sd = sig2))
)
}
Q
set.seed(42)
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
componente_1 = pi * dnorm(y, mean = mu1, sd = sig1)
componente_2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2)
tao1 = componente_1 / (componente_1 + componente_2)
tao2 = componente_2 / (componente_1 + componente_2)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
tao1 = pi
Q[k] = sum(componente_1 + componente_2)
}
set.seed(42)
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
componente_1 = pi * dnorm(y, mean = mu1, sd = sig1)
componente_2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2)
tao1 = componente_1 / (componente_1 + componente_2)
tao2 = componente_2 / (componente_1 + componente_2)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
Q[k] = sum(componente_1 + componente_2)
}
Q
library(mixtools)
gm<-normalmixEM(y,k=2,lambda=c(0.9,0.1),mu=c(0.4,0.3),sigma=c(0.05,0.02))
gm$lambda
gm$sigma
library(bayesmeta)
set.seed(42)
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.5
alfa = 0.9
mu = 0.4
n = 262
z = rbinom(n,1,pi)
y = x = z*rrayleigh(n,alfa) + (1-z)*rexp(n,mu)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
componente_1 = pi * drayleigh(x,alfa)
componente_2 = (1-pi) * dexp(x,mu)
tao1 = componente_1 / (componente_1 + componente_2)
tao2 = componente_2 / (componente_1 + componente_2)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu_hat =  sum(y*tao2) / sum(tao2)
alfa_hat = sqrt( sum(tao1 * y^2)/ sum((2 * tao1))  )
k = k + 1
Q[k] = sum(componente_1 + componente_2)
}
library(bayesmeta)
set.seed(42)
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.5
alfa = 0.9
mu = 0.4
n = 262
z = rbinom(n,1,pi)
y = x = z*rrayleigh(n,alfa) + (1-z)*rexp(n,mu)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
componente_1 = pi * drayleigh(x,alfa)
componente_2 = (1-pi) * dexp(x,mu)
tao1 = componente_1 / (componente_1 + componente_2)
tao2 = componente_2 / (componente_1 + componente_2)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu_hat =  sum(y*tao2) / sum(tao2)
alfa_hat = sqrt( sum(tao1 * y^2)/ sum((2 * tao1))  )
k = k + 1
Q[k] = sum(componente_1 + componente_2)
}
library(mixtools)
gm<-normalmixEM(y,k=2,lambda=c(0.9,0.1),mu=c(0.4,0.3),sigma=c(0.05,0.02))
gm$lambda
gm$sigma
gm$mu
set.seed(42)
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
componente_1 = pi * dnorm(y, mean = mu1, sd = sig1)
componente_2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2)
tao1 = componente_1 / (componente_1 + componente_2)
tao2 = componente_2 / (componente_1 + componente_2)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
Q[k] = sum(componente_1 + componente_2)
}
library(mixtools)
gm<-normalmixEM(y,k=2,lambda=c(0.9,0.1),mu=c(0.4,0.3),sigma=c(0.05,0.02))
gm$lambda
gm$sigma
gm$mu
set.seed(42)
somar_dados_finitos = function(y){
return( sum(y[is.finite(y)]) )
}
pi = 0.9
mu1 = 0.4
mu2 = 0.3
sig1 = 0.05
sig2 = 0.02
n = 262
z = rbinom(n,1,pi)
y = z*rnorm(n,mean = mu1,sd = sig1) + (1-z)*rnorm(n,mean = mu2, sd = sig2)
plot(density(y),main="Exemplo 1")
Q = c(0,1)
k = 2
while( abs(Q[k] - Q[k-1]) >=1e-6){
## Passo E
componente_1 = pi * dnorm(y, mean = mu1, sd = sig1)
componente_2 = (1-pi) * dnorm(y, mean = mu2, sd = sig2)
tao1 = componente_1 / (componente_1 + componente_2)
tao2 = componente_2 / (componente_1 + componente_2)
## Passo M
pi = somar_dados_finitos(tao1) / n
mu1 = somar_dados_finitos(tao1 * y) / somar_dados_finitos(tao1)
sig1 = sqrt(somar_dados_finitos( ((y - mu1)^2) * tao1 ) / somar_dados_finitos(tao1))
mu2 = somar_dados_finitos(tao2 * y) / somar_dados_finitos(tao2)
sig2 = sqrt(somar_dados_finitos( ((y - mu2)^2) * tao2 ) / somar_dados_finitos(tao2))
k = k + 1
Q[k] = sum(componente_1 + componente_2)
}
library(mixtools)
gm<-normalmixEM(y,k=2,lambda=c(0.9,0.1),mu=c(0.4,0.3),sigma=c(0.05,0.02))
gm$lambda
gm$sigma
gm$mu
